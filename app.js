const DEBUG_ENABLED=!1;class DebugLogger{constructor(){this.enabled=!1,this.logCount=0,this.enabled&&this.initDebugUI()}log(e,t,s=null){if(!this.enabled)return;this.logCount++;let i=new Date().toLocaleTimeString();console.log(`[DEBUG ${e.toUpperCase()}] ${t}`,s||""),this.addToDebugUI(e,t,s,i)}initDebugUI(){let e=document.getElementById("debugPanel");e&&(e.style.display="block");let t=document.getElementById("clearDebugBtn");t&&t.addEventListener("click",()=>this.clearDebugLog()),this.log("info","Debug UI inizializzato")}addToDebugUI(e,t,s,i){let a=document.getElementById("debugLog");if(!a)return;let n=document.createElement("div");n.className=`debug-entry debug-entry--${e}`;let o=`<span class="debug-timestamp">${i}</span><strong>[${e.toUpperCase()}]</strong> ${t}`;s&&(o+=`<br><small>${JSON.stringify(s,null,2)}</small>`),n.innerHTML=o,a.appendChild(n),a.scrollTop=a.scrollHeight;let r=a.querySelectorAll(".debug-entry");r.length>50&&a.removeChild(r[0])}clearDebugLog(){let e=document.getElementById("debugLog");e&&(e.innerHTML=""),this.logCount=0,this.log("info","Debug log pulito")}}class QRScannerApp{constructor(){this.debug=new DebugLogger,this.debug.log("info","Inizializzazione app QR Scanner"),this.codeReader=null,this.currentStream=null,this.scanCount=0,this.isScanning=!1,this.scannedCodes=new Set,this.scanningInterval=null,this.videoElement=null,this.initializeElements(),this.bindEvents(),this.updateUI(),this.debug.log("success","App inizializzata correttamente")}initializeElements(){this.startCameraBtn=document.getElementById("startCameraBtn"),this.stopCameraBtn=document.getElementById("stopCameraBtn"),this.clearBtn=document.getElementById("clearBtn"),this.copyBtn=document.getElementById("copyBtn"),this.downloadBtn=document.getElementById("downloadBtn"),this.videoElement=document.getElementById("videoElement"),this.resultsTextarea=document.getElementById("resultsTextarea"),this.resultsCounter=document.getElementById("resultsCounter"),this.statusMessage=document.getElementById("statusMessage"),this.videoContainer=document.getElementById("videoContainer"),this.debug.log("info","Elementi DOM inizializzati")}bindEvents(){this.startCameraBtn.addEventListener("click",()=>this.startCamera()),this.stopCameraBtn.addEventListener("click",()=>this.stopCamera()),this.clearBtn.addEventListener("click",()=>this.clearResults()),this.copyBtn.addEventListener("click",()=>this.copyCodesClipboard()),this.downloadBtn.addEventListener("click",()=>this.downloadCodesAsTXT()),this.resultsTextarea.addEventListener("input",()=>{this.updateScanCountFromTextarea(),this.updateUI()}),this.debug.log("info","Event listeners collegati")}updateScanCountFromTextarea(){let e=this.resultsTextarea.value.trim();if(e){let t=e.split("\n").filter(e=>e.trim());this.scanCount=t.length,this.scannedCodes.clear(),t.forEach(e=>this.scannedCodes.add(e.trim()))}else this.scanCount=0,this.scannedCodes.clear();this.resultsCounter.textContent=this.scanCount,this.debug.log("info",`Contatore aggiornato: ${this.scanCount} codici`)}async startCamera(){try{this.debug.log("info","Avvio camera richiesto"),this.showStatus("Richiesta permessi camera...","info"),this.currentStream&&(this.debug.log("warning","Stream esistente rilevato, chiusura..."),this.stopCamera(),await new Promise(e=>setTimeout(e,200))),this.codeReader||(this.codeReader=new ZXing.BrowserQRCodeReader,this.debug.log("success","BrowserQRCodeReader inizializzato"));let e=null;try{this.debug.log("info","Tentativo camera posteriore..."),e=await navigator.mediaDevices.getUserMedia({video:{facingMode:{exact:"environment"},width:{ideal:640,min:320},height:{ideal:480,min:240}}}),this.debug.log("success","Camera posteriore ottenuta")}catch(t){this.debug.log("warning","Camera posteriore non disponibile, tentativo camera generica",t.message);try{e=await navigator.mediaDevices.getUserMedia({video:{width:{ideal:640,min:320},height:{ideal:480,min:240}}}),this.debug.log("success","Camera generica ottenuta")}catch(s){this.debug.log("warning","Camera generica fallita, constraints base",s.message),e=await navigator.mediaDevices.getUserMedia({video:!0}),this.debug.log("success","Camera base ottenuta")}}if(!e)throw Error("Impossibile ottenere stream video");return this.currentStream=e,this.showStatus("Inizializzazione video...","info"),this.debug.log("info","Stream video ottenuto, configurazione elemento video..."),this.videoElement.srcObject=e,new Promise((e,t)=>{let s=setTimeout(()=>{t(Error("Timeout caricamento video"))},1e4);this.videoElement.onloadedmetadata=async()=>{clearTimeout(s);try{this.debug.log("info","Metadata video caricate, avvio riproduzione..."),await this.videoElement.play(),this.videoElement.classList.add("active"),this.isScanning=!0,this.startQRScanning(),this.showStatus("Camera attiva - Posiziona il QR code nel frame","success"),this.updateUI(),this.debug.log("success",`Camera attiva - Video: ${this.videoElement.videoWidth}x${this.videoElement.videoHeight}`),e()}catch(i){this.debug.log("error","Errore avvio video",i.message),t(Error("Errore avvio video: "+i.message))}},this.videoElement.onerror=()=>{clearTimeout(s),this.debug.log("error","Errore caricamento video"),t(Error("Errore caricamento video"))}})}catch(i){this.debug.log("error","Errore avvio camera",i.message),console.error("Errore avvio camera:",i),this.showStatus(`Errore camera: ${i.message||"Impossibile accedere alla camera"}`,"error"),this.cleanup(),this.updateUI()}}startQRScanning(){if(!this.isScanning){this.debug.log("warning","Scansione non avviata - flag isScanning = false");return}this.debug.log("info","Avvio scansione QR con metodo testato (interval 500ms)"),this.scanningInterval=setInterval(async()=>{if(this.isScanning&&this.videoElement)try{let e=await this.codeReader.decodeOnce(this.videoElement);e&&e.text&&(this.debug.log("success","QR rilevato",{text:e.text.substring(0,50)+"..."}),await this.handleQRResult(e.text))}catch(t){"NotFoundException"!==t.name&&this.debug.log("warning","Errore scansione QR (non NotFoundException)",t.message)}},500),this.debug.log("success","Interval scansione QR attivato")}stopCamera(){try{this.debug.log("info","Arresto camera richiesto"),this.scanningInterval&&(clearInterval(this.scanningInterval),this.scanningInterval=null,this.debug.log("info","Interval scansione fermato")),this.currentStream&&(this.currentStream.getTracks().forEach(e=>{e.stop()}),this.currentStream=null,this.debug.log("info","Stream video fermato")),this.videoElement&&(this.videoElement.srcObject=null,this.videoElement.classList.remove("active")),this.isScanning=!1,this.showStatus("Camera fermata","info"),this.updateUI(),this.debug.log("success","Camera fermata correttamente")}catch(e){this.debug.log("error","Errore stop camera",e.message),console.error("Errore stop camera:",e),this.showStatus("Errore nel fermare la camera","error")}}cleanup(){this.debug.log("info","Cleanup richiesto"),this.stopCamera(),this.isScanning=!1,this.currentStream=null,this.scanningInterval&&(clearInterval(this.scanningInterval),this.scanningInterval=null)}extractCode(e){let t=e.match(/[?&]code=([^&]+)/i);return t&&t[1]?(this.debug.log("success","Codice estratto",{original:e,code:t[1]}),t[1]):(this.debug.log("info","Nessun codice trovato, uso testo completo"),null)}async handleQRResult(e){if(!e||""===e.trim()){this.debug.log("warning","Testo QR vuoto");return}this.debug.log("info","Elaborazione risultato QR",{text:e.substring(0,100)+(e.length>100?"...":"")});let t=this.extractCode(e),s;if(t?(s=t,this.debug.log("success","QR URL riconosciuto",{code:s})):(s=e.trim(),this.debug.log("info","QR generico",{code:s.substring(0,50)+"..."})),this.scannedCodes.has(s)){this.debug.log("warning","Codice duplicato rilevato",{code:s}),this.showStatus("Codice gi\xe0 scansionato, passa al prossimo","warning");return}this.scannedCodes.add(s);let i=this.resultsTextarea.value,a=i?`${i}
${s}`:s;this.resultsTextarea.value=a,this.resultsTextarea.scrollTop=this.resultsTextarea.scrollHeight,this.scanCount++,this.resultsCounter.textContent=this.scanCount,this.updateUI();let n=t?`Nuovo codice: ${t}`:`QR scansionato: ${s.length>30?s.substring(0,30)+"...":s}`;this.showStatus(n,"success"),this.debug.log("success","Codice aggiunto ai risultati",{code:s,totalCount:this.scanCount}),setTimeout(()=>{this.isScanning&&this.showStatus("Scansione in corso... Posiziona il QR code nel frame","success")},3e3)}clearResults(){this.debug.log("info","Pulizia risultati richiesta"),this.resultsTextarea.value="",this.scanCount=0,this.scannedCodes.clear(),this.resultsCounter.textContent="0",this.updateUI(),this.showStatus("Risultati cancellati","info"),setTimeout(()=>{this.isScanning?this.showStatus("Scansione in corso... Posiziona il QR code nel frame","success"):this.hideStatus()},2e3)}async copyCodesClipboard(){let e=this.resultsTextarea.value;if(!e.trim()){this.showStatus("Nessun codice da copiare","warning"),this.debug.log("warning","Tentativo copia senza codici");return}try{if(navigator.clipboard&&navigator.clipboard.writeText)await navigator.clipboard.writeText(e),this.showStatus("Codici copiati negli appunti!","success"),this.debug.log("success","Codici copiati con Clipboard API",{count:e.split("\n").length});else{this.resultsTextarea.select(),this.resultsTextarea.setSelectionRange(0,99999);let t=document.execCommand("copy");if(t)this.showStatus("Codici copiati negli appunti!","success"),this.debug.log("success","Codici copiati con execCommand fallback");else throw Error("Comando copia non riuscito")}}catch(s){this.debug.log("error","Errore copia codici",s.message),console.error("Errore copia:",s),this.showStatus("Errore durante la copia. Seleziona manualmente il testo.","error"),this.resultsTextarea.select()}}downloadCodesAsTXT(){let e=this.resultsTextarea.value;if(!e.trim()){this.showStatus("Nessun codice da scaricare","warning"),this.debug.log("warning","Tentativo download senza codici");return}try{let t=new Blob([e],{type:"text/plain;charset=utf-8"}),s=URL.createObjectURL(t),i=document.createElement("a");i.href=s;let a=new Date,n=a.toISOString().slice(0,19).replace(/[:.]/g,"-");i.download=`codes-${n}.txt`,i.style.display="none",document.body.appendChild(i),i.click(),setTimeout(()=>{document.body.removeChild(i),URL.revokeObjectURL(s)},100),this.showStatus("File scaricato con successo!","success"),this.debug.log("success","File TXT scaricato",{filename:i.download,size:e.length})}catch(o){this.debug.log("error","Errore download TXT",o.message),console.error("Errore download:",o),this.showStatus("Errore durante il download","error")}}showStatus(e,t="info"){this.statusMessage.textContent=e,this.statusMessage.className=`status status--${t}`,this.statusMessage.style.display="block",this.debug.log("info",`Status mostrato: [${t}] ${e}`)}hideStatus(){this.statusMessage.style.display="none"}updateUI(){this.startCameraBtn.disabled=this.isScanning,this.stopCameraBtn.disabled=!this.isScanning,this.isScanning?(this.startCameraBtn.innerHTML='<span class="btn-icon">\uD83D\uDCF7</span>Camera Attiva',this.stopCameraBtn.innerHTML='<span class="btn-icon">⏹️</span>Ferma Camera'):(this.startCameraBtn.innerHTML='<span class="btn-icon">\uD83D\uDCF7</span>Avvia Camera',this.stopCameraBtn.innerHTML='<span class="btn-icon">⏹️</span>Ferma Camera');let e=this.resultsTextarea.value.trim().length>0;this.copyBtn.disabled=!e,this.downloadBtn.disabled=!e,this.copyBtn.style.opacity=e?"1":"0.5",this.downloadBtn.style.opacity=e?"1":"0.5"}}document.addEventListener("DOMContentLoaded",()=>{if("undefined"==typeof ZXing){console.error("ZXing library not loaded");let e=document.getElementById("statusMessage");e&&(e.textContent="Errore: Libreria ZXing non caricata. Ricarica la pagina.",e.className="status status--error",e.style.display="block");return}let t=new QRScannerApp;window.qrScannerApp=t,window.addEventListener("beforeunload",()=>{t.cleanup()}),document.addEventListener("visibilitychange",()=>{document.hidden&&t.isScanning&&(t.debug.log("info","Tab nascosto, arresto camera"),t.stopCamera())}),setTimeout(()=>{t.showStatus("Pronto per la scansione! Avvia la camera per iniziare.","info")},500),console.log("%c[QR SCANNER] Modalit\xe0 produzione - Debug disabilitato","color: #51cf66; font-weight: bold;")}),window.addEventListener("error",e=>{console.error("Errore globale:",e.error);let t=document.getElementById("statusMessage");t&&(t.textContent="Si \xe8 verificato un errore imprevisto",t.className="status status--error",t.style.display="block"),window.qrScannerApp&&window.qrScannerApp.debug&&window.qrScannerApp.debug.log("error","Errore globale",e.error?.message||"Errore sconosciuto")}),window.addEventListener("unhandledrejection",e=>{console.error("Promise rejection:",e.reason);let t=document.getElementById("statusMessage");t&&(t.textContent="Errore durante l'operazione",t.className="status status--error",t.style.display="block"),window.qrScannerApp&&window.qrScannerApp.debug&&window.qrScannerApp.debug.log("error","Promise rejection",e.reason?.toString()||"Rejection sconosciuto")});